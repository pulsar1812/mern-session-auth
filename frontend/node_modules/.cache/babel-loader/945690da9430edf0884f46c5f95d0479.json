{"ast":null,"code":"import * as apiUtil from '../util/session';\nimport { RECEIVE_CURRENT_USER, LOGOUT_CURRENT_USER } from './types';\nimport { receiveErrors } from './error';\n\nconst receiveCurrentUser = user => ({\n  type: RECEIVE_CURRENT_USER,\n  user\n});\n\nconst logoutCurrentUser = () => ({\n  type: LOGOUT_CURRENT_USER\n});\n\nexport const login = user => async dispatch => {\n  const res = await apiUtil.login(user);\n  const data = await res.json();\n\n  if (res.ok) {\n    return dispatch(receiveCurrentUser(data));\n  }\n\n  return dispatch(receiveErrors(data));\n};\nexport const signup = user => async dispatch => {\n  const res = await apiUtil.signup(user);\n  const data = await res.json();\n\n  if (res.ok) {\n    return dispatch(receiveCurrentUser(data));\n  }\n\n  return dispatch(receiveErrors(data));\n};\nexport const logout = () => async dispatch => {\n  const res = await apiUtil.logout();\n  const data = await res.json();\n\n  if (res.ok) {\n    return dispatch(logoutCurrentUser());\n  }\n\n  return dispatch(receiveErrors(data));\n};","map":{"version":3,"sources":["/Users/macbookpro/MyReact/mern-session-auth/frontend/src/actions/session.js"],"names":["apiUtil","RECEIVE_CURRENT_USER","LOGOUT_CURRENT_USER","receiveErrors","receiveCurrentUser","user","type","logoutCurrentUser","login","dispatch","res","data","json","ok","signup","logout"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,iBAAzB;AACA,SAASC,oBAAT,EAA+BC,mBAA/B,QAA0D,SAA1D;AACA,SAASC,aAAT,QAA8B,SAA9B;;AAEA,MAAMC,kBAAkB,GAAGC,IAAI,KAAK;AAClCC,EAAAA,IAAI,EAAEL,oBAD4B;AAElCI,EAAAA;AAFkC,CAAL,CAA/B;;AAKA,MAAME,iBAAiB,GAAG,OAAO;AAC/BD,EAAAA,IAAI,EAAEJ;AADyB,CAAP,CAA1B;;AAIA,OAAO,MAAMM,KAAK,GAAGH,IAAI,IAAI,MAAMI,QAAN,IAAkB;AAC7C,QAAMC,GAAG,GAAG,MAAMV,OAAO,CAACQ,KAAR,CAAcH,IAAd,CAAlB;AACA,QAAMM,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;;AAEA,MAAIF,GAAG,CAACG,EAAR,EAAY;AACV,WAAOJ,QAAQ,CAACL,kBAAkB,CAACO,IAAD,CAAnB,CAAf;AACD;;AACD,SAAOF,QAAQ,CAACN,aAAa,CAACQ,IAAD,CAAd,CAAf;AACD,CARM;AAUP,OAAO,MAAMG,MAAM,GAAGT,IAAI,IAAI,MAAMI,QAAN,IAAkB;AAC9C,QAAMC,GAAG,GAAG,MAAMV,OAAO,CAACc,MAAR,CAAeT,IAAf,CAAlB;AAEA,QAAMM,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;;AAEA,MAAIF,GAAG,CAACG,EAAR,EAAY;AACV,WAAOJ,QAAQ,CAACL,kBAAkB,CAACO,IAAD,CAAnB,CAAf;AACD;;AACD,SAAOF,QAAQ,CAACN,aAAa,CAACQ,IAAD,CAAd,CAAf;AACD,CATM;AAWP,OAAO,MAAMI,MAAM,GAAG,MAAM,MAAMN,QAAN,IAAkB;AAC5C,QAAMC,GAAG,GAAG,MAAMV,OAAO,CAACe,MAAR,EAAlB;AACA,QAAMJ,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;;AAEA,MAAIF,GAAG,CAACG,EAAR,EAAY;AACV,WAAOJ,QAAQ,CAACF,iBAAiB,EAAlB,CAAf;AACD;;AACD,SAAOE,QAAQ,CAACN,aAAa,CAACQ,IAAD,CAAd,CAAf;AACD,CARM","sourcesContent":["import * as apiUtil from '../util/session';\nimport { RECEIVE_CURRENT_USER, LOGOUT_CURRENT_USER } from './types';\nimport { receiveErrors } from './error';\n\nconst receiveCurrentUser = user => ({\n  type: RECEIVE_CURRENT_USER,\n  user\n});\n\nconst logoutCurrentUser = () => ({\n  type: LOGOUT_CURRENT_USER\n});\n\nexport const login = user => async dispatch => {\n  const res = await apiUtil.login(user);\n  const data = await res.json();\n\n  if (res.ok) {\n    return dispatch(receiveCurrentUser(data));\n  }\n  return dispatch(receiveErrors(data));\n};\n\nexport const signup = user => async dispatch => {\n  const res = await apiUtil.signup(user);\n\n  const data = await res.json();\n\n  if (res.ok) {\n    return dispatch(receiveCurrentUser(data));\n  }\n  return dispatch(receiveErrors(data));\n};\n\nexport const logout = () => async dispatch => {\n  const res = await apiUtil.logout();\n  const data = await res.json();\n\n  if (res.ok) {\n    return dispatch(logoutCurrentUser());\n  }\n  return dispatch(receiveErrors(data));\n};\n"]},"metadata":{},"sourceType":"module"}