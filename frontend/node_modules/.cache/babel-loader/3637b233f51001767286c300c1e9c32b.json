{"ast":null,"code":"import axios from 'axios';\nimport { RECEIVE_CURRENT_USER, LOGOUT_CURRENT_USER, RECEIVE_ERRORS, CLEAR_ERRORS } from './types'; // const receiveCurrentUser = user => ({\n//   type: RECEIVE_CURRENT_USER,\n//   user\n// });\n\nconst logoutCurrentUser = () => ({\n  type: LOGOUT_CURRENT_USER\n});\n\nconst receiveErrors = ({\n  message\n}) => ({\n  type: RECEIVE_ERRORS,\n  message\n});\n\nconst clearErrors = () => ({\n  type: CLEAR_ERRORS\n}); // Login\n\n\nexport const login = ({\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/session', body, config);\n    dispatch({\n      type: RECEIVE_CURRENT_USER,\n      payload: res\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    dispatch({\n      type: RECEIVE_ERRORS\n    });\n  }\n}; // Signup\n\nexport const signup = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: RECEIVE_CURRENT_USER,\n      payload: res\n    });\n  } catch (err) {\n    dispatch({\n      type: RECEIVE_ERRORS\n    });\n  }\n}; // Logout\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT_CURRENT_USER\n  });\n};","map":{"version":3,"sources":["/Users/macbookpro/MyReact/mern-session-auth/frontend/src/actions/session.js"],"names":["axios","RECEIVE_CURRENT_USER","LOGOUT_CURRENT_USER","RECEIVE_ERRORS","CLEAR_ERRORS","logoutCurrentUser","type","receiveErrors","message","clearErrors","login","email","password","dispatch","config","headers","body","JSON","stringify","res","post","payload","loadUser","err","signup","name","logout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,oBADF,EAEEC,mBAFF,EAGEC,cAHF,EAIEC,YAJF,QAKO,SALP,C,CAOA;AACA;AACA;AACA;;AAEA,MAAMC,iBAAiB,GAAG,OAAO;AAC/BC,EAAAA,IAAI,EAAEJ;AADyB,CAAP,CAA1B;;AAIA,MAAMK,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAkB;AACtCF,EAAAA,IAAI,EAAEH,cADgC;AAEtCK,EAAAA;AAFsC,CAAlB,CAAtB;;AAKA,MAAMC,WAAW,GAAG,OAAO;AACzBH,EAAAA,IAAI,EAAEF;AADmB,CAAP,CAApB,C,CAIA;;;AACA,OAAO,MAAMM,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB,MAAMC,QAAN,IAAkB;AAC9D,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAf,CAAb;;AAEA,MAAI;AACF,UAAMO,GAAG,GAAG,MAAMnB,KAAK,CAACoB,IAAN,CAAW,cAAX,EAA2BJ,IAA3B,EAAiCF,MAAjC,CAAlB;AAEAD,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAEL,oBADC;AAEPoB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAKAN,IAAAA,QAAQ,CAACS,QAAQ,EAAT,CAAR;AACD,GATD,CASE,OAAOC,GAAP,EAAY;AACZV,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAEH;AADC,KAAD,CAAR;AAGD;AACF,CAvBM,C,CAyBP;;AACA,OAAO,MAAMqB,MAAM,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQd,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAMC,QAAN,IAAkB;AACrE,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEO,IAAAA,IAAF;AAAQd,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AAEA,MAAI;AACF,UAAMO,GAAG,GAAG,MAAMnB,KAAK,CAACoB,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB;AAEAD,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAEL,oBADC;AAEPoB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GAPD,CAOE,OAAOI,GAAP,EAAY;AACZV,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAEH;AADC,KAAD,CAAR;AAGD;AACF,CArBM,C,CAuBP;;AACA,OAAO,MAAMuB,MAAM,GAAG,MAAMb,QAAQ,IAAI;AACtCA,EAAAA,QAAQ,CAAC;AAAEP,IAAAA,IAAI,EAAEJ;AAAR,GAAD,CAAR;AACD,CAFM","sourcesContent":["import axios from 'axios';\n\nimport {\n  RECEIVE_CURRENT_USER,\n  LOGOUT_CURRENT_USER,\n  RECEIVE_ERRORS,\n  CLEAR_ERRORS\n} from './types';\n\n// const receiveCurrentUser = user => ({\n//   type: RECEIVE_CURRENT_USER,\n//   user\n// });\n\nconst logoutCurrentUser = () => ({\n  type: LOGOUT_CURRENT_USER\n});\n\nconst receiveErrors = ({ message }) => ({\n  type: RECEIVE_ERRORS,\n  message\n});\n\nconst clearErrors = () => ({\n  type: CLEAR_ERRORS\n});\n\n// Login\nexport const login = ({ email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/api/session', body, config);\n\n    dispatch({\n      type: RECEIVE_CURRENT_USER,\n      payload: res\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    dispatch({\n      type: RECEIVE_ERRORS\n    });\n  }\n};\n\n// Signup\nexport const signup = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: RECEIVE_CURRENT_USER,\n      payload: res\n    });\n  } catch (err) {\n    dispatch({\n      type: RECEIVE_ERRORS\n    });\n  }\n};\n\n// Logout\nexport const logout = () => dispatch => {\n  dispatch({ type: LOGOUT_CURRENT_USER });\n};\n"]},"metadata":{},"sourceType":"module"}